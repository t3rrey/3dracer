{"ast":null,"code":"import * as React from 'react';\nimport * as THREE from 'three';\nimport { EdgeSplitModifier } from 'three-stdlib';\n\nfunction useEdgeSplit(cutOffAngle) {\n  var tryKeepNormals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var ref = React.useRef();\n  var original = React.useRef();\n  var modifier = React.useRef();\n  React.useEffect(function () {\n    if (!original.current && ref.current) {\n      original.current = ref.current.geometry.clone();\n      modifier.current = new EdgeSplitModifier();\n    }\n  }, []);\n  React.useEffect(function () {\n    if (original.current && ref.current && modifier.current) {\n      var geometry = new THREE.BufferGeometry();\n      geometry = original.current.clone();\n      var modifiedGeometry = modifier.current.modify(geometry, cutOffAngle, tryKeepNormals);\n      modifiedGeometry.computeVertexNormals();\n      ref.current.geometry = modifiedGeometry;\n    }\n  }, [cutOffAngle, tryKeepNormals]);\n  return ref;\n}\n\nexport { useEdgeSplit };","map":{"version":3,"sources":["C:/Users/Home/Downloads/raycast-vehicle/node_modules/@react-three/drei/core/useEdgeSplit.js"],"names":["React","THREE","EdgeSplitModifier","useEdgeSplit","cutOffAngle","tryKeepNormals","ref","useRef","original","modifier","useEffect","current","geometry","clone","BufferGeometry","modifiedGeometry","modify","computeVertexNormals"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AAEA,SAASC,YAAT,CAAsBC,WAAtB,EAA0D;AAAA,MAAvBC,cAAuB,uEAAN,IAAM;AACxD,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAN,EAAZ;AACA,MAAMC,QAAQ,GAAGR,KAAK,CAACO,MAAN,EAAjB;AACA,MAAME,QAAQ,GAAGT,KAAK,CAACO,MAAN,EAAjB;AACAP,EAAAA,KAAK,CAACU,SAAN,CAAgB,YAAM;AACpB,QAAI,CAACF,QAAQ,CAACG,OAAV,IAAqBL,GAAG,CAACK,OAA7B,EAAsC;AACpCH,MAAAA,QAAQ,CAACG,OAAT,GAAmBL,GAAG,CAACK,OAAJ,CAAYC,QAAZ,CAAqBC,KAArB,EAAnB;AACAJ,MAAAA,QAAQ,CAACE,OAAT,GAAmB,IAAIT,iBAAJ,EAAnB;AACD;AACF,GALD,EAKG,EALH;AAMAF,EAAAA,KAAK,CAACU,SAAN,CAAgB,YAAM;AACpB,QAAIF,QAAQ,CAACG,OAAT,IAAoBL,GAAG,CAACK,OAAxB,IAAmCF,QAAQ,CAACE,OAAhD,EAAyD;AACvD,UAAIC,QAAQ,GAAG,IAAIX,KAAK,CAACa,cAAV,EAAf;AACAF,MAAAA,QAAQ,GAAGJ,QAAQ,CAACG,OAAT,CAAiBE,KAAjB,EAAX;AACA,UAAME,gBAAgB,GAAGN,QAAQ,CAACE,OAAT,CAAiBK,MAAjB,CAAwBJ,QAAxB,EAAkCR,WAAlC,EAA+CC,cAA/C,CAAzB;AACAU,MAAAA,gBAAgB,CAACE,oBAAjB;AACAX,MAAAA,GAAG,CAACK,OAAJ,CAAYC,QAAZ,GAAuBG,gBAAvB;AACD;AACF,GARD,EAQG,CAACX,WAAD,EAAcC,cAAd,CARH;AASA,SAAOC,GAAP;AACD;;AAED,SAASH,YAAT","sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { EdgeSplitModifier } from 'three-stdlib';\n\nfunction useEdgeSplit(cutOffAngle, tryKeepNormals = true) {\n  const ref = React.useRef();\n  const original = React.useRef();\n  const modifier = React.useRef();\n  React.useEffect(() => {\n    if (!original.current && ref.current) {\n      original.current = ref.current.geometry.clone();\n      modifier.current = new EdgeSplitModifier();\n    }\n  }, []);\n  React.useEffect(() => {\n    if (original.current && ref.current && modifier.current) {\n      let geometry = new THREE.BufferGeometry();\n      geometry = original.current.clone();\n      const modifiedGeometry = modifier.current.modify(geometry, cutOffAngle, tryKeepNormals);\n      modifiedGeometry.computeVertexNormals();\n      ref.current.geometry = modifiedGeometry;\n    }\n  }, [cutOffAngle, tryKeepNormals]);\n  return ref;\n}\n\nexport { useEdgeSplit };\n"]},"metadata":{},"sourceType":"module"}