{"ast":null,"code":"import _objectSpread from \"C:/Users/Home/Downloads/raycast-vehicle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:/Users/Home/Downloads/raycast-vehicle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"radius\", \"leftSide\"];\n\nvar _jsxFileName = \"C:\\\\Users\\\\Home\\\\Downloads\\\\raycast-vehicle\\\\src\\\\Wheel.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { forwardRef } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { useCylinder } from '@react-three/cannon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseGLTF.preload('/Wheel.glb'); // Auto-generated by: https://github.com/pmndrs/gltfjsx\n\nvar Wheel = /*#__PURE__*/forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var _ref$radius = _ref.radius,\n      radius = _ref$radius === void 0 ? 0.7 : _ref$radius,\n      leftSide = _ref.leftSide,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useGLTF = useGLTF('/wheel.glb'),\n      nodes = _useGLTF.nodes,\n      materials = _useGLTF.materials;\n\n  useCylinder(function () {\n    return _objectSpread({\n      mass: 1,\n      type: 'Kinematic',\n      material: 'wheel',\n      collisionFilterGroup: 0,\n      args: [radius, radius, 0.5, 16]\n    }, props);\n  }, ref);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [0, 0, (leftSide ? 1 : -1) * Math.PI / 2],\n      children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n        material: materials.Rubber,\n        geometry: nodes.wheel_1.geometry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        material: materials.Steel,\n        geometry: nodes.wheel_2.geometry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        material: materials.Chrom,\n        geometry: nodes.wheel_3.geometry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n}, \"PO5bAqKcdcNLHKn2bp629accQTk=\", false, function () {\n  return [useGLTF, useCylinder];\n}));\n_c2 = Wheel;\nexport default Wheel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wheel$forwardRef\");\n$RefreshReg$(_c2, \"Wheel\");","map":{"version":3,"sources":["C:/Users/Home/Downloads/raycast-vehicle/src/Wheel.js"],"names":["forwardRef","useGLTF","useCylinder","preload","Wheel","ref","radius","leftSide","props","nodes","materials","mass","type","material","collisionFilterGroup","args","Math","PI","Rubber","wheel_1","geometry","Steel","wheel_2","Chrom","wheel_3"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEAD,OAAO,CAACE,OAAR,CAAgB,YAAhB,E,CAEA;;AACA,IAAMC,KAAK,gBAAGJ,UAAU,SAAC,gBAAuCK,GAAvC,EAA+C;AAAA;;AAAA,yBAA5CC,MAA4C;AAAA,MAA5CA,MAA4C,4BAAnC,GAAmC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAAjBC,KAAiB;;AACtE,iBAA6BP,OAAO,CAAC,YAAD,CAApC;AAAA,MAAQQ,KAAR,YAAQA,KAAR;AAAA,MAAeC,SAAf,YAAeA,SAAf;;AACAR,EAAAA,WAAW,CAAC;AAAA;AAASS,MAAAA,IAAI,EAAE,CAAf;AAAkBC,MAAAA,IAAI,EAAE,WAAxB;AAAqCC,MAAAA,QAAQ,EAAE,OAA/C;AAAwDC,MAAAA,oBAAoB,EAAE,CAA9E;AAAiFC,MAAAA,IAAI,EAAE,CAACT,MAAD,EAASA,MAAT,EAAiB,GAAjB,EAAsB,EAAtB;AAAvF,OAAqHE,KAArH;AAAA,GAAD,EAAgIH,GAAhI,CAAX;AACA,sBACE;AAAM,IAAA,GAAG,EAAEA,GAAX;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAQ,CAACE,QAAQ,GAAG,CAAH,GAAO,CAAC,CAAjB,IAAsBS,IAAI,CAACC,EAA5B,GAAkC,CAAzC,CAAhB;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAEP,SAAS,CAACQ,MAA1B;AAAkC,QAAA,QAAQ,EAAET,KAAK,CAACU,OAAN,CAAcC;AAA1D;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,QAAQ,EAAEV,SAAS,CAACW,KAA1B;AAAiC,QAAA,QAAQ,EAAEZ,KAAK,CAACa,OAAN,CAAcF;AAAzD;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAM,QAAA,QAAQ,EAAEV,SAAS,CAACa,KAA1B;AAAiC,QAAA,QAAQ,EAAEd,KAAK,CAACe,OAAN,CAAcJ;AAAzD;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAZuB;AAAA,UACOnB,OADP,EAEtBC,WAFsB;AAAA,GAAxB;MAAME,K;AAcN,eAAeA,KAAf","sourcesContent":["import { forwardRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { useCylinder } from '@react-three/cannon'\n\nuseGLTF.preload('/Wheel.glb')\n\n// Auto-generated by: https://github.com/pmndrs/gltfjsx\nconst Wheel = forwardRef(({ radius = 0.7, leftSide, ...props }, ref) => {\n  const { nodes, materials } = useGLTF('/wheel.glb')\n  useCylinder(() => ({ mass: 1, type: 'Kinematic', material: 'wheel', collisionFilterGroup: 0, args: [radius, radius, 0.5, 16], ...props }), ref)\n  return (\n    <mesh ref={ref}>\n      <mesh rotation={[0, 0, ((leftSide ? 1 : -1) * Math.PI) / 2]}>\n        <mesh material={materials.Rubber} geometry={nodes.wheel_1.geometry} />\n        <mesh material={materials.Steel} geometry={nodes.wheel_2.geometry} />\n        <mesh material={materials.Chrom} geometry={nodes.wheel_3.geometry} />\n      </mesh>\n    </mesh>\n  )\n})\n\nexport default Wheel\n"]},"metadata":{},"sourceType":"module"}